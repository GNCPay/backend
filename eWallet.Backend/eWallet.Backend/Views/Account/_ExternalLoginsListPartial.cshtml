@using Microsoft.Owin.Security
<style>
    .omb_socialButtons button {
        border: 0px;
        color: white;
    }

        .omb_socialButtons button:hover {
            color: white;
            opacity: 1;
        }

    .omb_socialButtons .omb_btn-facebook {
        background: #3b5998;
    }

    .omb_socialButtons .omb_btn-twitter {
        background: #00aced;
    }

    .omb_socialButtons .omb_btn-google {
        background: #c32f10;
    }
</style>
<h4>Use another service to log in.</h4>
<hr />
@{
    var loginProviders = Context.GetOwinContext().Authentication.GetExternalAuthenticationTypes();
    if (loginProviders.Count() == 0)
    {
        <div>
            <p>
                There are no external authentication services configured. See <a href="http://go.microsoft.com/fwlink/?LinkId=313242">this article</a>
                for details on setting up this ASP.NET application to support logging in via external services.
            </p>
        </div>
    }
    else
    {
        string action = Model.Action;
        string returnUrl = Model.ReturnUrl;
        using (Html.BeginForm(action, "Account", new { ReturnUrl = returnUrl }))
        {
            @Html.AntiForgeryToken()
            <div id="socialLoginList" class="omb_socialButtons">
                <p>
                    @foreach (AuthenticationDescription p in loginProviders)
                    {
                        <button type="submit" class="btn omb_btn-@p.AuthenticationType.ToLower()" id="@p.AuthenticationType" name="provider" value="@p.AuthenticationType" title="Log in using your @p.Caption account">@p.AuthenticationType</button>
                    }
                </p>
            </div>
        }
    }
}
